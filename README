NAME
    XML::Insert - insert elements into streamed XML

SYNOPSIS
        use XML::Insert;

        my $engine = XML::Insert->new( $xml_file );

        $engine->register(
            'parent'   => '/root/other/stuff',
            'before'  => [qw/ four five six/],
            'callback'=> \&add_four,
        );

        $engine->run;
        
DESCRIPTION
    `XML::Insert' is designed to efficiently insert elements at specific
    locations in a streaming XML file without the need to load the whole
    file into a DOM representation. It's flexible syntax should allow
    insertion at a given place in the tree, preserving element order and
    formatting and taking into account the possibility of missing optional
    elements.

METHODS
    new
            my $engine = XML::Insert->new( $xml_file );

        Create a new `XML::Insert' engine. Requires a single argument, which
        can be either a filename of the XML to parse or a filehandle open to
        the file.

    register
            $engine->register(
                'parent'   => '/root/other/stuff',
                'before'  => [qw/ four five six/],
                'callback'=> \&add_four,
            );

        Registers an insertion to make. There are two required arguments:

        * parent - the location in a simplified XPath format (i.e. no
        attributes, etc) to the parent element within which the insertion
        should happen
        * callback - a subroutine reference to call. The subroutine will be
        passed two arguments (depth in the tree and string to use for each
        depth-wise indentation) and should return the string to be inserted.
        See the SYNOPSIS for an example callback

        There is one optional argument:

        * before - an array reference to element names. If the order in
        which the new element is inserted within the parent matters, this
        reference should contain a list of elements before which the element
        should be placed. If any of these elements are seen within the
        parent, the element will be inserted immediately before. If none are
        defined or none are seen (e.g. they may be optional), the element
        will be inserted as the last item within the parent.

    set_output
            $engine->set_output( $fn_or_fh );

        Set the output target to which the modified XML will be printed. Can
        be either a filename or filehandle. Defaults to STDOUT.

    run
            $engine->run;

        Parses the file, inserting new content where appropriate, and prints
        the results to the output target.

CAVEATS AND BUGS
    This is code is in alpha testing stage and the API is not guaranteed to
    be stable.

    Please reports bugs to the author.

AUTHOR
    Jeremy Volkening <jdv *at* base2bio.com>

COPYRIGHT AND LICENSE
    Copyright 2017 Jeremy Volkening

    This program is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation, either version 3 of the License, or (at your
    option) any later version.

    This program is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
    Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program. If not, see <http://www.gnu.org/licenses/>.

